{"ast":null,"code":"var _jsxFileName = \"/Users/weiwei/Desktop/6150/react-pages/pages/src/Components/Login.jsx\",\n  _s = $RefreshSig$();\nimport './Login.css';\nimport { useState } from 'react';\n// import { users } from '../data/users_data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst loginMethod = [\"Username\", \"Email\"];\nfunction LoginInput(_ref) {\n  let {\n    method,\n    setAccount\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [method === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"login-username\",\n        children: [\"Username\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"login-username\",\n        placeholder: \"Input Username\",\n        onInput: e => {\n          setAccount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), method === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"login-useremail\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"login-useremail\",\n        placeholder: \"Input Email\",\n        onInput: e => {\n          setAccount(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = LoginInput;\nfunction Login(_ref2) {\n  _s();\n  let {\n    setCurrentUser,\n    setLoggedin\n  } = _ref2;\n  const [method, setMethod] = useState(0);\n  const [account, setAccount] = useState();\n  const [password, setPassword] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login__form\",\n      children: [/*#__PURE__*/_jsxDEV(LoginInput, {\n        method: method,\n        setAccount: setAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login-password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"login-password\",\n          placeholder: \"Input password\",\n          onInput: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login__bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login__button\",\n          onClick: e => {\n            e.preventDefault();\n            // check input\n            if (account === \"\") {\n              alert(\"Username or Email cannot be empty\");\n              return;\n            }\n            if (password === \"\") {\n              alert(\"Password cannot be empty\");\n              return;\n            }\n            if (method === 1) {\n              let at = account.indexOf('@');\n              let dot = account.indexOf('.');\n              if (at === -1 || dot === -1 || at > dot || at === 0 || dot === account.length - 1 || at + 1 === dot) {\n                alert(\"Email Format Invalid\");\n                return;\n              }\n            }\n            // check the user\n            if (localStorage.getItem('users')) {\n              let users = JSON.parse(localStorage.getItem('users'));\n              let user_valid = false;\n              let cur_user = {};\n              if (method === 0) {\n                for (let i = 0; i < users.length; i++) {\n                  if (account === users[i].username && password === users[i].userpassword) {\n                    cur_user = users[i];\n                    user_valid = true;\n                  }\n                }\n              } else {\n                for (let i = 0; i < users.length; i++) {\n                  if (account === users[i].useremail && password === users[i].userpassword) {\n                    cur_user = users[i];\n                    user_valid = true;\n                  }\n                }\n              }\n              //\n              if (user_valid) {\n                setCurrentUser(cur_user);\n                setLoggedin(true);\n                localStorage.setItem('cur_user', JSON.stringify(cur_user));\n              } else {\n                alert(\"Check Username or Password\");\n              }\n            } else {\n              alert(\"No Registered Users\");\n              return;\n            }\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login__switch\",\n          onClick: e => {\n            e.preventDefault();\n            setMethod(method === 0 ? 1 : 0);\n          },\n          children: [\"Use \", loginMethod[method === 0 ? 1 : 0], \" to Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login__notes\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"note_text\",\n        children: \"User registration and logging in is enabled by taking advantage of localStorage. LocalStorage can store the\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"RF9ZvbA98ciD9/yHngbh9tGDc7A=\");\n_c2 = Login;\nexport default Login;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginInput\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"names":["useState","loginMethod","LoginInput","method","setAccount","e","target","value","Login","setCurrentUser","setLoggedin","setMethod","account","password","setPassword","preventDefault","alert","at","indexOf","dot","length","localStorage","getItem","users","JSON","parse","user_valid","cur_user","i","username","userpassword","useremail","setItem","stringify"],"sources":["/Users/weiwei/Desktop/6150/react-pages/pages/src/Components/Login.jsx"],"sourcesContent":["import './Login.css';\nimport { useState } from 'react';\n// import { users } from '../data/users_data';\n\nconst loginMethod = [\"Username\", \"Email\"];\nfunction LoginInput({method, setAccount}) {\n    return (\n        <>\n            {method === 0 && \n            <div className=\"login__field\">\n                <label htmlFor=\"login-username\">Username<span>*</span></label>\n                <input type=\"text\" id=\"login-username\" placeholder=\"Input Username\" onInput={e => {\n                    setAccount(e.target.value);\n                }}/>\n            </div>}\n            {method === 1 && \n            <div className=\"login__field\">\n                <label htmlFor=\"login-useremail\">Email<span>*</span></label>\n                <input type=\"email\" id=\"login-useremail\" placeholder=\"Input Email\" onInput={e =>{\n                    setAccount(e.target.value);\n                }}/>\n            </div>}\n        </>\n    )\n}\n\nfunction Login({setCurrentUser, setLoggedin}){\n    const [method, setMethod] = useState(0);\n    const [account, setAccount] = useState();\n    const [password, setPassword] = useState();\n    return (\n        <>\n            <div className=\"login__title\">\n                <h2>Login</h2>\n            </div>\n            <form className='login__form'>\n                <LoginInput method={method} setAccount={setAccount}/>\n                <div className=\"login__field\">\n                    <label htmlFor=\"login-password\">Password<span>*</span></label>\n                    <input type=\"text\" id=\"login-password\" placeholder=\"Input password\" onInput={e => {\n                        setPassword(e.target.value);\n                    }}/>\n                </div>\n                <div className='login__bottom'>\n                    <button className=\"login__button\" onClick={e => {\n                        e.preventDefault();\n                        // check input\n                        if(account === \"\"){\n                            alert(\"Username or Email cannot be empty\");\n                            return;\n                        }\n                        if(password === \"\"){\n                            alert(\"Password cannot be empty\");\n                            return;\n                        }\n                        if(method === 1){\n                            let at = account.indexOf('@');\n                            let dot = account.indexOf('.');\n                            if(at === -1 || dot === -1 || (at > dot) || at === 0 || dot === account.length - 1 || at + 1 === dot){\n                                alert(\"Email Format Invalid\");\n                                return;\n                            }\n                        }\n                        // check the user\n                        if(localStorage.getItem('users')){\n                            let users = JSON.parse(localStorage.getItem('users'));\n                            let user_valid = false;\n                            let cur_user = {};\n                            if(method === 0){\n                                for(let i = 0; i < users.length; i++){\n                                    if(account === users[i].username && password === users[i].userpassword){\n                                        cur_user = users[i];\n                                        user_valid = true;\n                                    }\n                                }\n                            }else{\n                                for(let i = 0; i < users.length; i++){\n                                    if(account === users[i].useremail && password === users[i].userpassword){\n                                        cur_user = users[i];\n                                        user_valid = true;\n                                    }\n                                }\n                            }\n                            //\n                            if(user_valid){\n                                setCurrentUser(cur_user);\n                                setLoggedin(true);\n                                localStorage.setItem('cur_user', JSON.stringify(cur_user));\n                            }else{\n                                alert(\"Check Username or Password\");\n                            }\n                        }else{\n                            alert(\"No Registered Users\");\n                            return;\n                        }\n                    }}>Login</button>\n                    <button className='login__switch' onClick={e => {\n                            e.preventDefault();\n                            setMethod(method === 0? 1 : 0);\n                        }\n                    }>Use {loginMethod[method === 0? 1 : 0]} to Login</button>\n                </div>  \n            </form>\n            <div className='login__notes'>\n                <p className='note_text'>\n                    User registration and logging in is enabled by taking advantage of localStorage. LocalStorage \n                    can store the \n                </p>\n            </div>\n        </>\n    )\n}\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}