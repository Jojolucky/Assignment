package edu.neu.csye6200;

public class Queue_int implements Queue_int_API{
	private int[] arr;
	private int capacity; // Max size
	private int front;
	private int rear;
	private int count; // elements in Queue
	public Queue_int(int capacity) {
		this.arr = new int[capacity];
		this.capacity = capacity;
		this.front = 0;
		this.rear = -1;
		this.count = 0;
	}
	
	@Override
	public int size(){
		return count;
	}
	@Override
	public boolean isEmpty() {
		return (count== 0);
		}
	@Override
	public boolean isFull() {
		return (count == capacity);
		}
	@Override
	public void enqueue(int item) {
		if (isFull()) {
			System.exit(1); // ERROR
		}
		System.out.println("Adding " + item);
		rear = (rear + 1) % capacity; // circular index
		arr[rear] = item;
		count++;
		}
	@Override
	public int dequeue() {
		if (isEmpty()) {
		System.exit(1); // ERROR
		}
		int e = arr[front];
		System.out.println("Removing " + e);
		front = (front + 1) % capacity; // circular index
		count--;
		return e;
		}
	@Override
	public int peek() {
		if (isEmpty()) {
		System.exit(1); // ERROR
		}
		return arr[front];
		}
	
	
	
	

}
